[project]
name = "documentation-toolkit"
version = "0.1.0"
description = "Professional toolkit for documentation analysis and repository management"
requires-python = ">=3.13"
dependencies = [
    "click>=8.1.0",
    "python-dotenv>=0.21.0",
    "mypy>=1.16.1",
    "pygithub>=2.6.1",
    "loguru>=0.7.0",
    "pytest>=7.0.0",
    "ruff>=0.3.0",
    "black>=24.0.0",
    "pyyaml>=6.0.0",
    "opentelemetry-api>=1.20.0",
    "opentelemetry-sdk>=1.20.0",
    "opentelemetry-instrumentation-requests>=0.41b0",
    "opentelemetry-instrumentation-urllib3>=0.41b0",
]

[project.scripts]
repo-modules-by-version = "src.repo_modules_by_version.main:main"
validate-project = "src.dev_tools.cli:main"
alias-mappings = "src.alias_mappings.main:main"

[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[tool.setuptools.packages.find]
where = ["."]
include = ["src*"]

[tool.ruff]
target-version = "py313"
line-length = 88

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
]
ignore = ["E501"]  # line too long, handled by black

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
docstring-code-format = true

[tool.black]
line-length = 88
target-version = ["py313"]
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''
